Hi Maria,

I’m sharing the sequence of events that occurred when I applied the built-in policy. Initially, the policy was denied. To address this, I added the following lines to the built-in policy, as they were missing. Please find the related event logs attached (deny_policy_action.json):

"enablePrivateCluster": "[parameters('aksClusterContent').properties.apiServerAccessProfile.enablePrivateCluster]",
"enablePrivateClusterPublicFQDN": "[parameters('aksClusterContent').properties.apiServerAccessProfile.enablePrivateClusterPublicFQDN]",
"privateDNSZone": "[parameters('aksClusterContent').properties.apiServerAccessProfile.privateDNSZone]",
"omsagent": "[if(contains(parameters('aksClusterContent').properties.addonProfiles, 'omsagent'), parameters('aksClusterContent').properties.addonProfiles.omsagent, json('null'))]",
"identity": "[parameters('aksClusterContent').identity]"


After adding these parameters, the policy was successfully applied—except for the "identity" parameter, which still triggers a denial. For further details, please refer to the policy I previously shared, titled "Service Principal DENY v1". I've also attached the corresponding event log (identity_policy.json) for your review.
